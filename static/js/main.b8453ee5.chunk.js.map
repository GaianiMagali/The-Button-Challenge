{"version":3,"sources":["routes/PrivateRoute.js","routes/PublicRoute.js","assets/padlockClose.svg","assets/padlockOpen.svg","core/session.js","helper/removeDuplicates.js","components/Statistics.jsx","core/login/actions.js","helper/getNameInitials.js","components/Header.jsx","components/Alert.jsx","pages/HomePage.jsx","routes/DashboardRoutes.js","components/Auth.jsx","hooks/useForm.js","pages/LoginPage.jsx","core/login/userLogged.js","core/constants.js","core/api/api-service.js","core/api/sagas.js","core/login/sagas.js","routes/AppRouter.js","App.js","core/reducers.js","core/login/reducer.js","core/sagas.js","index.js","core/store.js"],"names":["PrivateRoute","isAuthenticated","Component","component","rest","localStorage","setItem","location","pathname","props","to","PublicRoute","getUserLogged","user","getItem","JSON","parse","setStatisticsUsers","data","a","statisticsList","push","getStatisticsUsers","stringify","statistics","response","array","hash","filter","o","userId","removeDuplicates","colors","Statistics","className","map","color","i","e","buttonColor","length","userLoggedActions","USER_LOGGED_SUCCESS","USER_LOGGED_PENDING","USER_LOGGED_FAILED","LOGIN","LOGOUT","SET_USER_LOGGED","userLoggedSuccess","type","payload","userLoggedPending","userLoggedFailed","error","login","username","logout","setUserLogged","userLoggedRequestActions","failed","success","pending","getNameInitials","string","names","split","initials","substring","toUpperCase","Header","dispatch","useDispatch","history","useHistory","useState","showMenu","setShowMenu","userLogged","useSelector","state","onClick","name","Alert","text","HomePage","time","setTime","start","setStart","classColorButton","setClassColorButton","lockButton","setLockButton","showTable","setShowTable","blockButton","setBlockButton","showAlert","setShowAlert","useEffect","id","timeCounter","currentUser","find","setTimeout","setButtonColor","textButton","src","padlockOpen","alt","padlockClose","DashboardRoutes","exact","path","Auth","initialState","values","setvalues","target","value","useForm","inputValues","handleChange","logged","onSubmit","preventDefault","placeholder","onChange","LoginPage","user_logged_initial_state","isPending","API_URL_USERS","api","options","config","method","url","axios","then","res","catch","console","log","fetchEntities","apiFunction","actions","param","put","call","bind","signin","watchSignin","watchLoginUserSuccess","takeEvery","take","userLoggedSaga","fork","AppRouter","App","combineReducers","sagas","all","store","sagaMiddleware","createSagaMiddleware","middleware","applyMiddleware","createStore","reducers","run","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8453ee5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n    localStorage.setItem('lastPath', rest.location.pathname);\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( !isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/\" /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","export default __webpack_public_path__ + \"static/media/padlockClose.de3ce361.svg\";","export default __webpack_public_path__ + \"static/media/padlockOpen.1d569abd.svg\";","import { removeDuplicates } from \"../helper/removeDuplicates\";\n\nexport const setUserLogged = (user) => {\n    localStorage.setItem(\"userLogged\", JSON.stringify(user));\n};\n\nexport const getUserLogged = () => {\n    const user = localStorage.getItem(\"userLogged\");\n    return JSON.parse(user);\n};\n\nexport const deleteSession = async () => {\n    localStorage.removeItem(\"userLogged\");\n};\n\nexport const setStatisticsUsers = async (data) => {\n    let statisticsList = [];\n    statisticsList.push(data);\n\n    if (getStatisticsUsers()) {\n        statisticsList = [...getStatisticsUsers(), ...statisticsList]\n    }\n\n    localStorage.setItem(\"statisticsUsers\", JSON.stringify(statisticsList));\n};\n\nexport const getStatisticsUsers = () => {\n    const statistics = localStorage.getItem(\"statisticsUsers\");\n    const response = JSON.parse(statistics);\n    return response ? removeDuplicates(response) : response;\n};","\n\nexport const removeDuplicates = (array) =>{\n    var hash = {};\n    return array.filter(o => hash[o.userId] ? false : hash[o.userId] = true);\n}\n","import React, { useEffect, useState } from 'react';\nimport { getStatisticsUsers } from '../core/session';\nimport _ from 'lodash';\n\nconst colors = [\n    \"purple\",\n    \"blue\",\n    \"green\",\n    \"yellow\",\n    \"orange\",\n    \"red\"\n]\n\nexport const Statistics = () => {   \n  \n    return (\n        <div className=\"container-statistics\">\n            <span className=\"title-statics\">Clicks statistics by users:</span>\n            {\n                colors.map((color, i) =>\n                    <div className=\"statistics-data\" key={i}>\n                        <div className={`square-statistics square-${color}`}></div>\n                        <p className=\"statistics-number\">\n                            {\n                               getStatisticsUsers() && getStatisticsUsers().filter(e => e.buttonColor === color).length\n                            } users\n                        </p>\n                    </div>\n                )\n            }\n        </div>\n    )\n}\n","\nexport const userLoggedActions = {\n    USER_LOGGED_SUCCESS: 'USER_LOGGED_SUCCESS',\n    USER_LOGGED_PENDING: 'USER_LOGGED_PENDING',\n    USER_LOGGED_FAILED: 'USER_LOGGED_FAILED',\n    LOGIN: 'lOGIN',\n    LOGOUT: 'LOGOUT',\n    SET_USER_LOGGED: 'SET_USER_LOGGED',\n\n    userLoggedSuccess: data => ({\n        type: userLoggedActions.USER_LOGGED_SUCCESS,\n        payload: {\n            data\n        }\n    }),\n\n    userLoggedPending: () => ({\n        type: userLoggedActions.USER_LOGGED_PENDING\n    }),\n\n    userLoggedFailed: error => ({\n        type: userLoggedActions.USER_LOGGED_FAILED,\n        payload: { error }\n    }),\n\n    login: (username) => ({\n        type: userLoggedActions.LOGIN,\n        payload: {\n            username\n        }\n    }),\n\n    logout: () => ({\n        type: userLoggedActions.LOGOUT,\n    }),\n\n    setUserLogged: (data) => ({\n        type: userLoggedActions.SET_USER_LOGGED,\n        payload: {\n            data\n        }\n    })\n};\n\nexport const userLoggedRequestActions = {\n    failed: userLoggedActions.userLoggedFailed,\n    success: userLoggedActions.userLoggedSuccess,\n    pending: userLoggedActions.userLoggedPending\n}","\nexport const getNameInitials = (string) => {\n\n    var names = string.split(' '),\n        initials = names[0].substring(0, 1).toUpperCase();\n\n    if (names.length > 1) {\n        initials += names[names.length - 1].substring(0, 1).toUpperCase();\n    }\n    return initials;\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { userLoggedActions } from '../core/login/actions';\nimport { getNameInitials } from '../helper/getNameInitials';\n\n\nexport const Header = () => {\n    const dispatch = useDispatch();\n    const history = useHistory()\n    const [showMenu, setShowMenu] = useState(false);\n    const { userLogged } = useSelector(state => state);\n\n\n    const logout = () => {\n        dispatch(userLoggedActions.logout())\n        history.push('./login')\n    }\n\n    return (\n        <>\n            <div className=\"cube\"></div>\n\n            <div className=\"header\">\n                <span>The Timer App</span>\n                <div>\n                    <div className=\"avatar\" onClick={() => setShowMenu(!showMenu)} type=\"button\">\n                        {getNameInitials(userLogged.user.name)}\n                    </div>\n                    {\n                        showMenu && <div className=\"container-menu slideInDown\">\n                            <span type=\"button\" onClick={logout}>Logout</span>\n                        </div>\n                    }\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\n\nexport const Alert = ({ text }) => {\n    return (\n        <div className=\"alert\">{text}</div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport padlockClose from '../assets/padlockClose.svg';\nimport padlockOpen from '../assets/padlockOpen.svg';\nimport { Statistics } from '../components/Statistics';\nimport { Header } from '../components/Header';\nimport { getStatisticsUsers, setStatisticsUsers } from '../core/session';\nimport { Alert } from '../components/Alert';\n\nexport const HomePage = () => {\n    const [time, setTime] = useState(60);\n    const [start, setStart] = useState(false);\n    const [classColorButton, setClassColorButton] = useState(\"gray\");\n    const [lockButton, setLockButton] = useState(false);\n    const [showTable, setShowTable] = useState(false);\n    const { userLogged } = useSelector(state => state);\n    const [blockButton, setBlockButton] = useState(false);\n    const [showAlert, setShowAlert] = useState(false);\n\n\n    useEffect(() => {\n        !start && blockButton && setStatisticsUsers({\n            userId: userLogged.user.id, buttonColor: classColorButton,\n            timeCounter: time\n        })\n    }, [time, start])\n\n\n    useEffect(() => {\n        const currentUser = getStatisticsUsers() && getStatisticsUsers().find(user => user.userId === userLogged.user.id);\n        if (currentUser) {\n            setClassColorButton(currentUser.buttonColor);\n            setTime(currentUser.timeCounter)\n            setBlockButton(true);\n            setShowTable(true);\n        }\n    }, [userLogged])\n\n    useEffect(() => {\n        if ((time >= 52 && time <= 61) && start) {\n            setClassColorButton(\"purple\");\n        }\n        start && setTimeout(() => {\n            if (time >= 1) {\n                setTime(time - 1);\n            }\n            setButtonColor()\n\n        }, 1000);\n    }, [start, time]);\n\n    const setButtonColor = () => {\n\n        if (time === 60) {\n            setClassColorButton(\"gray\");\n        }\n        if (time >= 52 && time <= 59) {\n            setClassColorButton(\"purple\");\n        }\n        if (time >= 42 && time <= 52) {\n            setClassColorButton(\"blue\");\n        }\n        if (time >= 32 && time <= 42) {\n            setClassColorButton(\"green\");\n        }\n        if (time >= 22 && time <= 32) {\n            setClassColorButton(\"yellow\");\n        }\n        if (time >= 12 && time <= 22) {\n            setClassColorButton(\"orange\");\n        }\n        if (time >= 0 && time <= 12) {\n            setClassColorButton(\"red\");\n        }\n    }\n\n\n    const handleClickTime = () => {\n        if (!lockButton && !blockButton) {\n            setStart(!start);\n            if (time === 0) {\n                setTime(60);\n            }\n        } else {\n            setShowAlert(!showAlert)\n\n        }\n        start && setShowTable(true);\n        start && setBlockButton(!blockButton);\n    }\n\n    const textButton = !start ? \"Start\" : \"Stop\";\n\n    const handleClickLockButtonTime = () => {\n        setLockButton(!lockButton);\n        setClassColorButton(\"white\");\n        lockButton && setButtonColor()\n    }\n\n\n    return (\n        <div className=\"container-home\">\n            <Header />\n\n            {showAlert && <Alert text=\"You can only click once\" />}\n\n            <div className={`CountdownCircleTimer border-counter-${classColorButton}`}>\n                <div className={`timer-text text-counter-${classColorButton}`}>\n                    <p >{`${time}s`}</p>\n                </div>\n            </div>\n\n            <span\n                type=\"button\"\n                className={`timer-button bg-${classColorButton}`}\n                onClick={handleClickTime}\n            >\n                {\n                    time === 0 ? \"reset\" : textButton\n                }\n            </span>\n\n            <div\n                type=\"button\"\n                className=\"lock-time-button\"\n                onClick={handleClickLockButtonTime}\n            >\n                {\n                    !lockButton ?\n                        <div>\n                            <img src={padlockClose} alt=\"padlock-close\" className=\"lock-time-img\" />\n                            <p className=\"text-padlock\">Lock Timer</p>\n                        </div>\n                        :\n                        <div>\n                            <img src={padlockOpen} alt=\"padlock-open\" className=\"lock-time-img\" />\n                            <p className=\"text-padlock\">Unlock Timer</p>\n                        </div>\n                }\n            </div>\n\n            {showTable && <Statistics />}\n        </div>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { HomePage } from '../pages/HomePage';\n\n\nexport const DashboardRoutes = () => {\n\n    return (\n        <>\n            <div className=\"container mt-2\">\n                <Switch>\n                    <Route exact path=\"/home\" component={ HomePage } />\n                    <Redirect to=\"/home\" />\n                </Switch>\n            </div>\n        </>\n    )\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { userLoggedActions } from '../core/login/actions';\nimport { useForm } from '../hooks/useForm';\n\nexport const Auth = () => {\n    const [inputValues, handleChange, resetForm] = useForm({\n        username: ''\n    })\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const { userLogged } = useSelector(state => state);\n\n\n    useEffect(() => {\n        userLogged.logged && history.push('/home');\n    }, [userLogged])\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        dispatch(userLoggedActions.login(inputValues.username));\n    }\n\n\n    return (\n        <div className=\"card-items\">\n            <h2 className=\"header-form-title\">Sign In</h2>\n            <form onSubmit={submitForm} >\n                {/* <label>Username</label> */}\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter your username\"\n                    name=\"username\"\n                    onChange={handleChange}\n                    value={inputValues.username}\n                />\n                <button\n                    type=\"submit\"\n                    className=\"form-button\"\n                >\n                    <span className=\"text-buton-form\">Signin</span>\n                </button>\n            </form>\n        </div>\n    )\n}\n","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n\n    const [values, setvalues] = useState(initialState);\n\n    const handleChange = ({ target }) => {\n        setvalues({\n            ...values,\n            [target.name]: target.value\n        });\n    }\n\n    const reset = () => {\n        setvalues(initialState);\n    }\n\n    return [values, handleChange, reset];\n}\n","import React from 'react';\nimport { Auth } from '../components/Auth';\n\nexport const LoginPage = () => {\n    return (\n        <div className=\"container-welcome\">\n            <div className=\"card\">\n                <Auth />\n            </div>\n        </div>\n    )\n}\n","\n\nexport const user_logged_initial_state = {\n    isPending: false,\n    success: false,\n    error: null,\n    logged: false,\n    user: {}\n}","export const API_BASE_URL = 'https://jsonplaceholder.typicode.com'\nexport const API_URL_USERS = `${API_BASE_URL}/users`","import axios from 'axios';\nimport { API_URL_USERS } from '../constants';\n\nexport const api = {\n    login(username) {\n        return dispatch({\n            url: `${API_URL_USERS}?username=${username}`\n        })\n    }\n}\n\n\nexport function dispatch(options) {\n    let config = {\n        method: options.method || 'get',\n        url: options.url\n    }\n\n    return axios(config)\n        .then(res => res.data)\n        .catch(error => console.log(error))\n}","import { call, put } from 'redux-saga/effects';\nimport { userLoggedRequestActions } from '../login';\nimport { api } from './api-service';\n\nfunction* fetchEntities(apiFunction, actions, id, param) {\n    try {\n        yield put(actions.pending());\n\n        const data = yield call(apiFunction, param || id);\n\n        if (data.length > 0) {\n            yield put(actions.success(data));\n        } else {\n            yield put(actions.failed(data));\n        }\n\n    } catch (error) {\n        yield put(actions.failed(error));\n    }\n}\n\nexport const login = fetchEntities.bind(null, api.login, userLoggedRequestActions);\n","import { call, fork, takeEvery, take } from 'redux-saga/effects';\nimport { login } from '../api';\nimport { setUserLogged } from '../session';\nimport { userLoggedActions } from './actions';\n\nexport function* signin({ payload }) {\n    const { username } = payload;\n    yield call(login, username);\n}\n\n//Watchers\nexport function* watchSignin() {\n    yield takeEvery(userLoggedActions.LOGIN, signin);\n}\n\nexport function* watchLoginUserSuccess() {\n    while (true) {\n        const { payload } = yield take(userLoggedActions.USER_LOGGED_SUCCESS);\n        setUserLogged(payload.data[0]);\n    }\n}\n\n//Root\nexport const userLoggedSaga = [\n    fork(watchSignin),\n    fork(watchLoginUserSuccess)\n]","import React, { useEffect } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch\n} from \"react-router-dom\";\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { DashboardRoutes } from './DashboardRoutes';\nimport { LoginPage } from '../pages/LoginPage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserLogged } from '../core/session';\nimport { userLoggedActions } from '../core/login';\n\n\nexport const AppRouter = () => {\n    const { userLogged } = useSelector(state => state);\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        dispatch(userLoggedActions.setUserLogged(getUserLogged() && getUserLogged()[0]))\n    }, []);\n\n\n    return (\n        <Router>\n            <>\n                <Switch>\n                    <PublicRoute\n                        exact\n                        path=\"/login\"\n                        component={LoginPage}\n                        isAuthenticated={userLogged.logged }\n                      \n                    />\n                    <PrivateRoute\n                        path=\"/\"\n                        component={DashboardRoutes}\n                        isAuthenticated={userLogged.logged}\n                    />\n                </Switch>\n            </>\n        </Router>\n    )\n}","import React from 'react';\nimport { AppRouter } from './routes/AppRouter';\nimport './App.css';\nimport './normalize.css';\n\n\nexport const App = () => {\n  return (\n    <div>\n     <AppRouter/>\n    </div>\n  )\n}\n\n","import { combineReducers } from \"redux\";\nimport { userLoggedReducer } from \"./login\";\n\nexport default combineReducers({\n    userLogged: userLoggedReducer\n})","import { userLoggedActions } from \"./actions\";\nimport { user_logged_initial_state } from \"./userLogged\";\n\nexport const userLoggedReducer = (state = user_logged_initial_state, { payload, type }) => {\n    switch (type) {\n        case userLoggedActions.USER_LOGGED_SUCCESS:\n            return {\n                ...state,\n                isPending: false,\n                success: true,\n                error: null,\n                logged: true,\n                user: payload.data[0]\n            }\n\n        case userLoggedActions.USER_LOGGED_PENDING:\n            return {\n                ...state,\n                isPending: true\n            }\n\n        case userLoggedActions.USER_LOGGED_FAILED:\n            return {\n                ...state,\n                isPending: false,\n                success: false,\n                error: payload.error,\n                logged: false\n            }\n\n        case userLoggedActions.LOGOUT:\n            return {\n                ...state,\n                isPending: false,\n                success: false,\n                error: null,\n                logged: false,\n                user: {}\n            }\n        case userLoggedActions.SET_USER_LOGGED:\n            return {\n                ...state,\n                isPending: false,\n                success: true,\n                error: null,\n                user: payload.data,\n                logged: !!payload.data\n            }\n        default:\n            return state;\n    }\n}","import { all } from 'redux-saga/effects';\nimport { userLoggedSaga } from './login';\n\nexport default function* sagas() {\n    yield all([\n        ...userLoggedSaga\n    ])\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\nimport configureStore from './core/store';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport sagas from './sagas';\n\nexport default function configureStore() {\n    // create the saga middleware\n    const sagaMiddleware = createSagaMiddleware();\n    let middleware = applyMiddleware(sagaMiddleware);\n\n    if (process.env.NODE_ENV !== 'production') {\n        const devToolsExtension = window.devToolsExtension;\n        if (typeof devToolsExtension === 'function') {\n            middleware = compose(middleware, devToolsExtension());\n        }\n    }\n\n    // mount it on the Store\n    const store = createStore(reducers, middleware)\n\n    // then run the saga\n    sagaMiddleware.run(sagas)\n\n    if (module.hot) {\n        module.hot.accept('./reducers', () => {\n            store.replaceReducer(require('./reducers').default);\n        })\n    }\n\n    return store;\n}"],"sourceRoot":""}